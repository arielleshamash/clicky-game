{"ast":null,"code":"var _jsxFileName = \"/Users/arielleshamash/Desktop/my_folder/clicky-game/src/App.js\";\nimport React, { Component } from 'react';\nimport Wrapper from \"./components/Wrapper\";\nimport Card from \"./components/Card\";\nimport Title from \"./components/Title\";\nimport Nav from \"./components/NavBar\";\nimport cards from \"./cards.json\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards,\n      currentScore: 0,\n      highscore: 0,\n      clicked: []\n    };\n\n    this.clickCount = id => {\n      this.state.cards.find((o, i) => {\n        if (o.id === id) {\n          if (cards[i].count === 0) {\n            cards[i].count = cards[i].count + 1;\n            this.setState({\n              currentScore: this.state.currentScore + 1\n            }, function () {\n              console.log(this.state.currentScore);\n            });\n            this.state.cards.sort(() => Math.random() - 0.5);\n            return true;\n          } else {\n            this.gameOver();\n          }\n        }\n      });\n    };\n\n    this.gameOver = () => {\n      if (this.state.currentScore > this.state.highscore) {\n        this.setState({\n          highscore: this.state.currentScore\n        }, function () {\n          console.log(this.state.highscore);\n          this.setState({\n            highscore: highscore\n          });\n        });\n      }\n\n      this.state.cards.forEach(card => {\n        card.count = 0;\n      });\n      alert(\"Game Over \\nscore: \".concat(this.state.currentScore));\n      this.setState({\n        currentScore: 0\n      });\n      return true;\n    };\n  }\n\n  // Map over this.state.cards and render a cardCard component for each card object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      title: \"App Clicky Game\",\n      score: this.state.currentScore,\n      highScore: this.state.highScore,\n      message: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Click on an image to earn points, but don't click on any more than once!\"), this.state.cards.map(card => React.createElement(Card, {\n      clickCount: this.clickCount,\n      id: card.id,\n      key: card.id,\n      image: card.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/arielleshamash/Desktop/my_folder/clicky-game/src/App.js"],"names":["React","Component","Wrapper","Card","Title","Nav","cards","App","state","currentScore","highscore","clicked","clickCount","id","find","o","i","count","setState","console","log","sort","Math","random","gameOver","forEach","card","alert","render","highScore","message","map","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Wrapper from \"./components/Wrapper\";\nimport Card from \"./components/Card\";\nimport Title from \"./components/Title\";\nimport Nav from \"./components/NavBar\";\nimport cards from \"./cards.json\";\n\n\nclass App extends React.Component {\n  \n  // Setting this.state.cards to the cards json array\n  state = {\n    cards,\n    currentScore: 0,\n    highscore: 0,\n    clicked: []\n  };\n\n  \n\n  clickCount = id => {\n    this.state.cards.find((o, i) => {\n      if (o.id === id) {\n        if(cards[i].count === 0){\n          cards[i].count = cards[i].count + 1;\n          this.setState({currentScore : this.state.currentScore + 1}, function(){\n            console.log(this.state.currentScore);\n          });\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true; \n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\ngameOver = () => {\n    if (this.state.currentScore > this.state.highscore) {\n      this.setState({highscore: this.state.currentScore}, function() {\n        console.log(this.state.highscore);\n        this.setState({highscore: highscore});\n      });\n    }\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Game Over \\nscore: ${this.state.currentScore}`);\n    this.setState({currentScore: 0});\n    return true;\n  }\n  // Map over this.state.cards and render a cardCard component for each card object\n  render() {\n    return (\n      <Wrapper>\n        <Nav\n          title=\"App Clicky Game\"\n          score={this.state.currentScore}\n          highScore={this.state.highScore}\n          message={this.state.message}\n        />\n\n        <Title>\n        Click on an image to earn points, but don't click on any more than once!\n        </Title>\n            {this.state.cards.map(card => (\n                 <Card\n                 clickCount={this.clickCount}\n                 id={card.id}\n                 key={card.id}\n                 image={card.image}\n               />\n            ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}